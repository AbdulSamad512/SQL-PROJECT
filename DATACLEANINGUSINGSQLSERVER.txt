select * from [dbo].[Sheet1$]

/*
CLEANING DATA IN SQL Queries
*/
select * from [dbo].[Sheet1$]

------------------------------------------------------------------------------------------

/*
Standardize Date Format
*/
select SaleDateConverted, convert(Date, SaleDate)
from [dbo].[Sheet1$]

ALTER TABLE [dbo].[Sheet1$]
add SaleDateConverted Date

update [dbo].[Sheet1$]
set SaleDateConverted = convert(Date, SaleDate)

/*
Populate property address data
*/
select *
from [dbo].[Sheet1$]
--where PropertyAddress is null
order by ParcelID

select a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress, isnull (a.PropertyAddress,b.PropertyAddress)
from [dbo].[Sheet1$] a
join [dbo].[Sheet1$] b
on a.ParcelID = b.ParcelID
and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

update a 
set PropertyAddress = isnull(a.PropertyAddress,b.PropertyAddress)
from [dbo].[Sheet1$] a
join [dbo].[Sheet1$] b
on a.ParcelID = b.ParcelID
and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

----------------------------------------------------------------------------------------
--BREAKING OUT THE ADDRESS IN TO INDIVIDUAL COLUMNS (ADDRESS,CITY,STATE)
select PropertyAddress
from [dbo].[Sheet1$]

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address

From [dbo].[Sheet1$]

ALTER TABLE [dbo].[Sheet1$]
Add PropertySplitAddress Nvarchar(255);

Update [dbo].[Sheet1$]
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )


ALTER TABLE [dbo].[Sheet1$]
Add PropertySplitCity Nvarchar(255);

Update [dbo].[Sheet1$]
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

select * from [dbo].[Sheet1$]

Select OwnerAddress
From [dbo].[Sheet1$]

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From [dbo].[Sheet1$]

ALTER TABLE [dbo].[Sheet1$]
Add OwnerSplitAddress Nvarchar(255);

Update [dbo].[Sheet1$]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE [dbo].[Sheet1$]
Add OwnerSplitCity Nvarchar(255);

Update [dbo].[Sheet1$]
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE [dbo].[Sheet1$]
Add OwnerSplitState Nvarchar(255);

Update [dbo].[Sheet1$]
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

select * from [dbo].[Sheet1$]

--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From [dbo].[Sheet1$]
Group by SoldAsVacant
order by 2

Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From [dbo].[Sheet1$]

Update [dbo].[Sheet1$]
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END


-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From  [dbo].[Sheet1$]
--order by ParcelID
)
select *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress

Select *
From  [dbo].[Sheet1$]



---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns

Select *
From [dbo].[Sheet1$]

ALTER TABLE [dbo].[Sheet1$]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate